//A complete rewrite of the editor configuraation system
var options = {};
var editorConfig = {};


saveFile = function (filename, data) {
    try {
        fs.writeFileSync(filename, data);
    } catch (err) {
        alert('Save-File Error: ' + err);
        return false;
    }
    return true;
};
showMessage = function (message) {
    $("#builder-status").html(message)
            .fadeIn('fast');
    setTimeout(() => {
        $("#builder-status").fadeOut('slow');
    }, 3000);
};
var setupEditorChips = function () {
    editorConfig.preHtmlBlock = '<!DOCTYPE html>\n\
    <html>\n\
    <head>\n\
        <meta charset="utf-8">\n\
        <meta name="viewport" content="width=device-width, initial-scale=1">\n\
        <meta name="generator" content="Klein Karoo Web Builder Software">\n';
    var fname, prjFname;
    for (var i in options.base_style) {
        fname = pathUtil.basename(options.base_style[i]);
        prjFname = pageData.location+fname;
        try{
            if(!fs.existsSync(prjFname)){ //only if it hasn't been copied already please
                if(fs.existsSync(options.base_style[i]))
                    fs.createReadStream(options.base_style[i]).pipe(fs.createWriteStream(prjFname));
            }
        }catch(err){
            alert('Page Construction Failure: '+err);
        }
        editorConfig.preHtmlBlock += `        <link rel="stylesheet" href="${fname}" type="text/css">` + '\n';
    }
    //now add current style
    editorConfig.preHtmlBlock += `        <link rel="stylesheet" href="${ID}.css" type="text/css">` + '\n';
    editorConfig.preHtmlBlock += `        <title>${ID}</title> </head><body>` + '\n';
    //post block
    editorConfig.postHtmlBlock = '\n'+'\n'+`        <!-- this page was generated by KKWS Web Builder -->` + '\n';
    for (var i in options.base_scripts) {
        fname = pathUtil.basename(options.base_scripts[i]);
        prjFname = pageData.location+fname;
        try{
            if(!fs.existsSync(prjFname)){ //only if it hasn't been copied already please
                if(fs.existsSync(options.base_scripts[i]))
                    fs.createReadStream(options.base_scripts[i]).pipe(fs.createWriteStream(prjFname));
            }
        }catch(err){
            alert('Page Construction Failure: '+err);
        }
        editorConfig.postHtmlBlock += '\n'+`        <script src="${fname}"></script>` + '\n';
    }
    editorConfig.postHtmlBlock += `</body></html>`;
};
var setupEditorCommands = function () {
    editorConfig.commands = {
        defaults: [
            {
                id: 'undo',
                run: function (editor, sender) {
                    sender.set('active', false);
                    editor.UndoManager.undo(true);
                }
            }, {
                id: 'redo',
                run: function (editor, sender) {
                    sender.set('active', false);
                    editor.UndoManager.redo(true);
                }
            }, {
                id: 'clean-all',
                run: function (editor, sender) {
                    sender.set('active', false);
                    if (confirm('Are you sure to clean the canvas?')) {
                        var comps = editor.DomComponents.clear();
                    }
                }
            }]
    };
};

var setupEditorStorage = function () {
    editorConfig.storageManager = {
        id: ID,
        type: 'local',
        autosave: 1,
        autoload: 1,
        stepsBeforeSave: 1,
        storeComponents: 1,
        storeStyles: 1,
        storeHtml: 1,
        storeCss: 1
    };
};


var setupEditorStyle = function () {
    editorConfig.customStyleManager = [];
    function setupGeneralStyle() {
        editorConfig.customStyleManager.push({
            name: 'General',
            buildProps: ['float', 'display', 'position', 'top', 'right', 'left', 'bottom'],
            properties: [{
                    name: 'Alignment',
                    property: 'float',
                    type: 'radio',
                    defaults: 'none',
                    list: [
                        {value: 'none', className: 'fa fa-times'},
                        {value: 'left', className: 'fa fa-align-left'},
                        {value: 'right', className: 'fa fa-align-right'}
                    ]
                },
                {property: 'position', type: 'select'}
            ]
        });
    }
    ;
    function setupDimensioning() {
        editorConfig.customStyleManager.push({
            name: 'Dimension',
            open: false,
            buildProps: ['width', 'flex-width', 'height', 'max-width', 'min-height', 'margin', 'padding'],
            properties: [{
                    id: 'flex-width',
                    type: 'integer',
                    name: 'Width',
                    units: ['px', '%'],
                    property: 'flex-basis',
                    toRequire: 1
                }, {
                    property: 'margin',
                    properties: [
                        {name: 'Top', property: 'margin-top'},
                        {name: 'Right', property: 'margin-right'},
                        {name: 'Bottom', property: 'margin-bottom'},
                        {name: 'Left', property: 'margin-left'}
                    ]
                }, {
                    property: 'padding',
                    properties: [
                        {name: 'Top', property: 'padding-top'},
                        {name: 'Right', property: 'padding-right'},
                        {name: 'Bottom', property: 'padding-bottom'},
                        {name: 'Left', property: 'padding-left'}
                    ]
                }]
        });
    }
    ;
    function setupTypography() {
        editorConfig.customStyleManager.push({
            name: 'Typography',
            open: false,
            buildProps: ['font-family', 'font-size', 'font-weight', 'letter-spacing', 'color', 'line-height', 'text-align', 'text-decoration', 'text-shadow'],
            properties: [
                {name: 'Font', property: 'font-family'},
                {name: 'Weight', property: 'font-weight'},
                {name: 'Font color', property: 'color'},
                {
                    property: 'text-align',
                    type: 'radio',
                    defaults: 'left',
                    list: [
                        {value: 'left', name: 'Left', className: 'fa fa-align-left'},
                        {value: 'center', name: 'Center', className: 'fa fa-align-center'},
                        {value: 'right', name: 'Right', className: 'fa fa-align-right'},
                        {value: 'justify', name: 'Justify', className: 'fa fa-align-justify'}
                    ]
                }, {
                    property: 'text-decoration',
                    type: 'radio',
                    defaults: 'none',
                    list: [
                        {value: 'none', name: 'None', className: 'fa fa-times'},
                        {value: 'underline', name: 'underline', className: 'fa fa-underline'},
                        {value: 'line-through', name: 'Line-through', className: 'fa fa-strikethrough'}
                    ]
                }, {
                    property: 'text-shadow',
                    properties: [
                        {name: 'X position', property: 'text-shadow-h'},
                        {name: 'Y position', property: 'text-shadow-v'},
                        {name: 'Blur', property: 'text-shadow-blur'},
                        {name: 'Color', property: 'text-shadow-color'}
                    ]
                }
            ]
        });
    }
    ;
    function setupDecorations() {
        editorConfig.customStyleManager.push({
            name: 'Decorations',
            open: false,
            buildProps: ['opacity', 'background-color', 'border-radius', 'border', 'box-shadow', 'background'],
            properties: [{
                    type: 'slider',
                    property: 'opacity',
                    defaults: 1,
                    step: 0.01,
                    max: 1,
                    min: 0
                }, {
                    property: 'border-radius',
                    properties: [
                        {name: 'Top', property: 'border-top-left-radius'},
                        {name: 'Right', property: 'border-top-right-radius'},
                        {name: 'Bottom', property: 'border-bottom-left-radius'},
                        {name: 'Left', property: 'border-bottom-right-radius'}
                    ]
                }, {
                    property: 'box-shadow',
                    properties: [
                        {name: 'X position', property: 'box-shadow-h'},
                        {name: 'Y position', property: 'box-shadow-v'},
                        {name: 'Blur', property: 'box-shadow-blur'},
                        {name: 'Spread', property: 'box-shadow-spread'},
                        {name: 'Color', property: 'box-shadow-color'},
                        {name: 'Shadow type', property: 'box-shadow-type'}
                    ]
                }, {
                    property: 'background',
                    properties: [
                        {name: 'Image', property: 'background-image'},
                        {name: 'Repeat', property: 'background-repeat'},
                        {name: 'Position', property: 'background-position'},
                        {name: 'Attachment', property: 'background-attachment'},
                        {name: 'Size', property: 'background-size'}
                    ]
                }
            ]
        });
    }
    ;
    function setupExtra() {
        editorConfig.customStyleManager.push({
            name: 'Extra',
            open: false,
            buildProps: ['transition', 'perspective', 'transform'],
            properties: [{
                    property: 'transition',
                    properties: [
                        {name: 'Property', property: 'transition-property'},
                        {name: 'Duration', property: 'transition-duration'},
                        {name: 'Easing', property: 'transition-timing-function'}
                    ]
                }, {
                    property: 'transform',
                    properties: [
                        {name: 'Rotate X', property: 'transform-rotate-x'},
                        {name: 'Rotate Y', property: 'transform-rotate-y'},
                        {name: 'Rotate Z', property: 'transform-rotate-z'},
                        {name: 'Scale X', property: 'transform-scale-x'},
                        {name: 'Scale Y', property: 'transform-scale-y'},
                        {name: 'Scale Z', property: 'transform-scale-z'}
                    ],
                }
            ]
        });
    }
    ;
    function setupFlex() {
        editorConfig.customStyleManager.push({
            name: 'Flex',
            open: false,
            properties: [{
                    name: 'Flex Container',
                    property: 'display',
                    type: 'select',
                    defaults: 'block',
                    list: [
                        {value: 'block', name: 'Disable'},
                        {value: 'flex', name: 'Enable'}
                    ]
                }, {
                    name: 'Flex Parent',
                    property: 'label-parent-flex',
                    type: 'integer',
                }, {
                    name: 'Direction',
                    property: 'flex-direction',
                    type: 'radio',
                    defaults: 'row',
                    list: [{
                            value: 'row',
                            name: 'Row',
                            className: 'icons-flex icon-dir-row',
                            title: 'Row',
                        }, {
                            value: 'row-reverse',
                            name: 'Row reverse',
                            className: 'icons-flex icon-dir-row-rev',
                            title: 'Row reverse',
                        }, {
                            value: 'column',
                            name: 'Column',
                            title: 'Column',
                            className: 'icons-flex icon-dir-col',
                        }, {
                            value: 'column-reverse',
                            name: 'Column reverse',
                            title: 'Column reverse',
                            className: 'icons-flex icon-dir-col-rev',
                        }],
                }, {
                    name: 'Justify',
                    property: 'justify-content',
                    type: 'radio',
                    defaults: 'flex-start',
                    list: [{
                            value: 'flex-start',
                            className: 'icons-flex icon-just-start',
                            title: 'Start',
                        }, {
                            value: 'flex-end',
                            title: 'End',
                            className: 'icons-flex icon-just-end',
                        }, {
                            value: 'space-between',
                            title: 'Space between',
                            className: 'icons-flex icon-just-sp-bet',
                        }, {
                            value: 'space-around',
                            title: 'Space around',
                            className: 'icons-flex icon-just-sp-ar',
                        }, {
                            value: 'center',
                            title: 'Center',
                            className: 'icons-flex icon-just-sp-cent',
                        }],
                }, {
                    name: 'Align',
                    property: 'align-items',
                    type: 'radio',
                    defaults: 'center',
                    list: [{
                            value: 'flex-start',
                            title: 'Start',
                            className: 'icons-flex icon-al-start',
                        }, {
                            value: 'flex-end',
                            title: 'End',
                            className: 'icons-flex icon-al-end',
                        }, {
                            value: 'stretch',
                            title: 'Stretch',
                            className: 'icons-flex icon-al-str',
                        }, {
                            value: 'center',
                            title: 'Center',
                            className: 'icons-flex icon-al-center',
                        }],
                }, {
                    name: 'Flex Children',
                    property: 'label-parent-flex',
                    type: 'integer',
                }, {
                    name: 'Order',
                    property: 'order',
                    type: 'integer',
                    defaults: 0,
                    min: 0
                }, {
                    name: 'Flex',
                    property: 'flex',
                    type: 'composite',
                    properties: [{
                            name: 'Grow',
                            property: 'flex-grow',
                            type: 'integer',
                            defaults: 0,
                            min: 0
                        }, {
                            name: 'Shrink',
                            property: 'flex-shrink',
                            type: 'integer',
                            defaults: 0,
                            min: 0
                        }, {
                            name: 'Basis',
                            property: 'flex-basis',
                            type: 'integer',
                            units: ['px', '%', ''],
                            unit: '',
                            defaults: 'auto',
                        }],
                }, {
                    name: 'Align',
                    property: 'align-self',
                    type: 'radio',
                    defaults: 'auto',
                    list: [{
                            value: 'auto',
                            name: 'Auto',
                        }, {
                            value: 'flex-start',
                            title: 'Start',
                            className: 'icons-flex icon-al-start',
                        }, {
                            value: 'flex-end',
                            title: 'End',
                            className: 'icons-flex icon-al-end',
                        }, {
                            value: 'stretch',
                            title: 'Stretch',
                            className: 'icons-flex icon-al-str',
                        }, {
                            value: 'center',
                            title: 'Center',
                            className: 'icons-flex icon-al-center',
                        }],
                }]
        });
    }
    ;

    setupGeneralStyle();
    setupDimensioning();
    setupTypography();
    setupDecorations();
    setupExtra();
    setupFlex();
};


var setupThemeOptions = function () {
    options.base_style = [];
    options.base_scripts = [];
    for (var style in pageData.plugin.stylesheets)
        options.base_style.push(pageData.pluginPath + pageData.plugin.stylesheets[style]);
    for (var script in pageData.plugin.scripts)
        options.base_scripts.push(pageData.pluginPath + pageData.plugin.scripts[script]);
};

var setup = function () {
    setupThemeOptions();
    setupEditorCommands();
    setupEditorStorage();
    setupEditorStyle();
    setupEditorChips();
};

setup();


